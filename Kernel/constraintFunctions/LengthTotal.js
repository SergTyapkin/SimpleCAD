import { ElementTypes } from "../../elements/ElementTypes.js";

/**
 * Function for LengthTotal constraint. 
 * This function fill local matrix J and vector F.
 * 
 * @param {Constraint} constraint 
 * @returns {Object} Object with axis names, local Jacobian and local vector F
 */
function getDerivativeFunction_LengthTotal(constraint, unknowns, axisGlobal) {
    // TODO optimize with one for `element loop

    for (let i = 0; i < constraint.elements.length; i++) {
        for (let j = i + 1; j < constraint.elements.length; j++) {
            if (constraint.elements[i] === constraint.elements[j]) {
                throw new Error("Constraint has same elements in elements array.\n" 
                + "Constraint id is " + constraint.id + "\nElement 1 is " + JSON.stringify(constraint.elements[i])
                + "\nElement 2 is " + JSON.stringify(constraint.elements[j]));
            }
        }
    }

    const axisLocal = [];
    axisLocal.push('lambda_' + constraint.id);
    for (const element of constraint.elements) {
        if (element.type === ElementTypes.ARC) {
            const p0 = element.p0;
            const p1 = element.p1;
            const p2 = element.p2;
            axisLocal.push('dx_' + p0.id);
            axisLocal.push('dy_' + p0.id);
            axisLocal.push('dx_' + p1.id);
            axisLocal.push('dy_' + p1.id);
            axisLocal.push('dx_' + p2.id);
            axisLocal.push('dy_' + p2.id);
        } else if (element.type === ElementTypes.LINE) {
            const dx1Str = 'dx_' + element.p1.id;
            const dy1Str = 'dy_' + element.p1.id;
            const dx2Str = 'dx_' + element.p2.id;
            const dy2Str = 'dy_' + element.p2.id;

            const dx1StrInArray = axisLocal.find(
                strInArray => (strInArray === dx1Str));
            const dx2StrInArray = axisLocal.find(
                strInArray => (strInArray === dx2Str));
            if (!dx1StrInArray) {
                axisLocal.push(dx1Str);
                axisLocal.push(dy1Str);
            }
            if (!dx2StrInArray) {
                axisLocal.push(dx2Str);
                axisLocal.push(dy2Str);
            }
        }
    }
    const dim = axisLocal.length;

    const localToGlobal = new Array(dim);
    for (let i = 0; i < dim; i++) {
        localToGlobal[i] = axisGlobal.indexOf(axisLocal[i]);
    }

    const JacobianLocal = new Array(dim);
    const F_Local = new Array(dim);
    for (let i = 0; i < dim; i++) {
        F_Local[i] = 0;
        JacobianLocal[i] = new Array(dim);
        for (let j = 0; j < dim; j++) {
            JacobianLocal[i][j] = 0;
        }
    }

    const LT = constraint.value; // total length

    const lambda = unknowns[localToGlobal[0]];
    let f = 0;
    for (const element of constraint.elements) {
        if (element.type === ElementTypes.LINE) {
            const x1 = element.p1.x; 
            const y1 = element.p1.y; 
            const x2 = element.p2.x; 
            const y2 = element.p2.y; 
            const dx1 = unknowns[localToGlobal[axisLocal.indexOf('dx_' + element.p1.id)]];
            const dy1 = unknowns[localToGlobal[axisLocal.indexOf('dy_' + element.p1.id)]];
            const dx2 = unknowns[localToGlobal[axisLocal.indexOf('dx_' + element.p2.id)]];
            const dy2 = unknowns[localToGlobal[axisLocal.indexOf('dy_' + element.p2.id)]];
            
            f += Math.sqrt((x2 + dx2 - x1 - dx1)**2 + (y2 + dy2 - y1 - dy1)**2);
        } else if (element.type === ElementTypes.ARC) {
            const p0 = element.p0;
            const p1 = element.p1;
            const p2 = element.p2;

            const x0 = p0.x;
            const y0 = p0.y;
            const x1 = p1.x;
            const y1 = p1.y;
            const x2 = p2.x;
            const y2 = p2.y;

            const dx0 = unknowns[localToGlobal[axisLocal.indexOf('dx_' + p0.id)]];
            const dy0 = unknowns[localToGlobal[axisLocal.indexOf('dy_' + p0.id)]];
            const dx1 = unknowns[localToGlobal[axisLocal.indexOf('dx_' + p1.id)]];
            const dy1 = unknowns[localToGlobal[axisLocal.indexOf('dy_' + p1.id)]];
            const dx2 = unknowns[localToGlobal[axisLocal.indexOf('dx_' + p2.id)]];
            const dy2 = unknowns[localToGlobal[axisLocal.indexOf('dy_' + p2.id)]];

            const v11 = (y1 + dy1 >= y0 + dy0) ? 0 : (2 * Math.PI);
            const v12 = (y1 + dy1 >= y0 + dy0) ? 1 : -1;
            const v21 = (y2 + dy2 >= y0 + dy0) ? 0 : (2 * Math.PI);
            const v22 = (y2 + dy2 >= y0 + dy0) ? 1 : -1;
            // "fi_i + dfi_i"
            const fi1_dfi1 = v11 + v12 * Math.acos((x1 + dx1 - x0 - dx0)/Math.sqrt(Math.pow((x1 + dx1 - x0 - dx0), 2) + Math.pow((y1 + dy1 - y0 - dy0), 2)));
            const fi2_dfi2 = v21 + v22 * Math.acos((x2 + dx2 - x0 - dx0)/Math.sqrt(Math.pow((x2 + dx2 - x0 - dx0), 2) + Math.pow((y2 + dy2 - y0 - dy0), 2)));
            const v3 = (fi2_dfi2 >= fi1_dfi1) ? 0 : (2 * Math.PI); 

            f += Math.sqrt(Math.pow((x1+dx1-x0-dx0),2)+Math.pow((y1+dy1-y0-dy0),2)) * (v3 + (v21 + v22*Math.acos((x2+dx2-x0-dx0)/Math.sqrt(Math.pow((x2+dx2-x0-dx0),2)+Math.pow((y2+dy2-y0-dy0),2)))) - (v11 + v12*Math.acos((x1+dx1-x0-dx0)/Math.sqrt(Math.pow((x1+dx1-x0-dx0),2)+Math.pow((y1+dy1-y0-dy0),2)))));
        }
    }
    f -= LT; // f = Î£(legth of elements) - L(total) = 0

    F_Local[0] = f;
    let curIdx = 0;
    for (const element of constraint.elements) {
        if (element.type === ElementTypes.LINE) {
            const x1 = element.p1.x; 
            const y1 = element.p1.y; 
            const x2 = element.p2.x; 
            const y2 = element.p2.y; 
            const dx1 = unknowns[localToGlobal[axisLocal.indexOf('dx_' + element.p1.id)]];
            const dy1 = unknowns[localToGlobal[axisLocal.indexOf('dy_' + element.p1.id)]];
            const dx2 = unknowns[localToGlobal[axisLocal.indexOf('dx_' + element.p2.id)]];
            const dy2 = unknowns[localToGlobal[axisLocal.indexOf('dy_' + element.p2.id)]];

            const tmpDX = (x2 + dx2 - x1 - dx1);
            const tmpDY = (y2 + dy2 - y1 - dy1);
            const tmpL = Math.sqrt(tmpDX**2 + tmpDY**2);

            F_Local[curIdx + 1] = -lambda * tmpDX / tmpL;
            F_Local[curIdx + 2] = -lambda * tmpDY / tmpL;
            F_Local[curIdx + 3] = lambda * tmpDX / tmpL;
            F_Local[curIdx + 4] = lambda * tmpDY / tmpL;

            curIdx += 4;
        } else if (element.type === ElementTypes.ARC) {
            const p0 = element.p0;
            const p1 = element.p1;
            const p2 = element.p2;

            const x0 = p0.x;
            const y0 = p0.y;
            const x1 = p1.x;
            const y1 = p1.y;
            const x2 = p2.x;
            const y2 = p2.y;

            const dx0 = unknowns[localToGlobal[axisLocal.indexOf('dx_' + p0.id)]];
            const dy0 = unknowns[localToGlobal[axisLocal.indexOf('dy_' + p0.id)]];
            const dx1 = unknowns[localToGlobal[axisLocal.indexOf('dx_' + p1.id)]];
            const dy1 = unknowns[localToGlobal[axisLocal.indexOf('dy_' + p1.id)]];
            const dx2 = unknowns[localToGlobal[axisLocal.indexOf('dx_' + p2.id)]];
            const dy2 = unknowns[localToGlobal[axisLocal.indexOf('dy_' + p2.id)]];

            const v11 = (y1 + dy1 >= y0 + dy0) ? 0 : (2 * Math.PI);
            const v12 = (y1 + dy1 >= y0 + dy0) ? 1 : -1;
            const v21 = (y2 + dy2 >= y0 + dy0) ? 0 : (2 * Math.PI);
            const v22 = (y2 + dy2 >= y0 + dy0) ? 1 : -1;
            // "fi_i + dfi_i"
            const fi1_dfi1 = v11 + v12 * Math.acos((x1 + dx1 - x0 - dx0)/Math.sqrt(Math.pow((x1 + dx1 - x0 - dx0), 2) + Math.pow((y1 + dy1 - y0 - dy0), 2)));
            const fi2_dfi2 = v21 + v22 * Math.acos((x2 + dx2 - x0 - dx0)/Math.sqrt(Math.pow((x2 + dx2 - x0 - dx0), 2) + Math.pow((y2 + dy2 - y0 - dy0), 2)));
            const v3 = (fi2_dfi2 >= fi1_dfi1) ? 0 : (2 * Math.PI); 

            F_Local[curIdx + 1] = -lambda*(((v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2))))/Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2) - (v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2))))/Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)));
            F_Local[curIdx + 2] = lambda*(((v12*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (v22*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) + ((2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)));
            F_Local[curIdx + 3] = -lambda*(((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) - (v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))/Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2));
            F_Local[curIdx + 4] = -lambda*(((2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) + (v12*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))));
            F_Local[curIdx + 5] = -(lambda*v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))/Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2);
            F_Local[curIdx + 6] = (lambda*v22*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2));

            curIdx += 6;
        }
    }

    for (const element of constraint.elements) {
        const tmpAxis = [];
        tmpAxis.push('lambda_' + constraint.id);
        if (element.type === ElementTypes.LINE) {
            tmpAxis.push('dx_' + element.p1.id);
            tmpAxis.push('dy_' + element.p1.id);
            tmpAxis.push('dx_' + element.p2.id);
            tmpAxis.push('dy_' + element.p2.id);

            const tmpToLocal = new Array(tmpAxis.length);
            for (let i = 0; i < tmpAxis.length; i++) {
                tmpToLocal[i] = axisLocal.indexOf(tmpAxis[i]);
            }

            const x1 = element.p1.x; 
            const y1 = element.p1.y; 
            const x2 = element.p2.x; 
            const y2 = element.p2.y; 
            const dx1 = unknowns[localToGlobal[axisLocal.indexOf('dx_' + element.p1.id)]];
            const dy1 = unknowns[localToGlobal[axisLocal.indexOf('dy_' + element.p1.id)]];
            const dx2 = unknowns[localToGlobal[axisLocal.indexOf('dx_' + element.p2.id)]];
            const dy2 = unknowns[localToGlobal[axisLocal.indexOf('dy_' + element.p2.id)]];

            const tmpDX = (x2 + dx2 - x1 - dx1);
            const tmpDY = (y2 + dy2 - y1 - dy1);
            const tmpL = Math.sqrt(tmpDX**2 + tmpDY**2);
            const tmpL_3 = Math.pow(tmpL, 3);
            
            JacobianLocal[tmpToLocal[0]][tmpToLocal[1]] += -tmpDX / tmpL;
            JacobianLocal[tmpToLocal[0]][tmpToLocal[2]] += -tmpDY / tmpL;
            JacobianLocal[tmpToLocal[0]][tmpToLocal[3]] += tmpDX / tmpL;
            JacobianLocal[tmpToLocal[0]][tmpToLocal[4]] += tmpDY / tmpL;

            JacobianLocal[tmpToLocal[1]][tmpToLocal[0]] += -tmpDX / tmpL;
            JacobianLocal[tmpToLocal[1]][tmpToLocal[1]] += -lambda * (tmpDX * tmpDX / tmpL_3 - 1/tmpL);
            JacobianLocal[tmpToLocal[1]][tmpToLocal[2]] += -lambda * (tmpDY * tmpDX / tmpL_3);
            JacobianLocal[tmpToLocal[1]][tmpToLocal[3]] += -lambda * (-tmpDX * tmpDX / tmpL_3 + 1/tmpL);
            JacobianLocal[tmpToLocal[1]][tmpToLocal[4]] += -lambda * (-tmpDY * tmpDX / tmpL_3);
            
            JacobianLocal[tmpToLocal[2]][tmpToLocal[0]] += -tmpDY / tmpL;
            JacobianLocal[tmpToLocal[2]][tmpToLocal[1]] += -lambda * (tmpDX * tmpDY / tmpL_3);
            JacobianLocal[tmpToLocal[2]][tmpToLocal[2]] += -lambda * (tmpDY * tmpDY / tmpL_3 - 1/tmpL);
            JacobianLocal[tmpToLocal[2]][tmpToLocal[3]] += -lambda * (-tmpDX * tmpDY / tmpL_3);
            JacobianLocal[tmpToLocal[2]][tmpToLocal[4]] += -lambda * (-tmpDY * tmpDY / tmpL_3 + 1/tmpL);

            JacobianLocal[tmpToLocal[3]][tmpToLocal[0]] += tmpDX / tmpL;
            JacobianLocal[tmpToLocal[3]][tmpToLocal[1]] += lambda * (tmpDX * tmpDX / tmpL_3 - 1/tmpL);
            JacobianLocal[tmpToLocal[3]][tmpToLocal[2]] += lambda * (tmpDY * tmpDX / tmpL_3);
            JacobianLocal[tmpToLocal[3]][tmpToLocal[3]] += lambda * (-tmpDX * tmpDX / tmpL_3 + 1/tmpL);
            JacobianLocal[tmpToLocal[3]][tmpToLocal[4]] += lambda * (-tmpDY * tmpDX / tmpL_3);
            
            JacobianLocal[tmpToLocal[4]][tmpToLocal[0]] += tmpDY / tmpL;
            JacobianLocal[tmpToLocal[4]][tmpToLocal[1]] += lambda * (tmpDX * tmpDY / tmpL_3);
            JacobianLocal[tmpToLocal[4]][tmpToLocal[2]] += lambda * (tmpDY * tmpDY / tmpL_3 - 1/tmpL);
            JacobianLocal[tmpToLocal[4]][tmpToLocal[3]] += lambda * (-tmpDX * tmpDY / tmpL_3);
            JacobianLocal[tmpToLocal[4]][tmpToLocal[4]] += lambda * (-tmpDY * tmpDY / tmpL_3 + 1/tmpL);

        } else if (element.type === ElementTypes.ARC) {
            const p0 = element.p0;
            const p1 = element.p1;
            const p2 = element.p2;
            tmpAxis.push('dx_' + p0.id);
            tmpAxis.push('dy_' + p0.id);
            tmpAxis.push('dx_' + p1.id);
            tmpAxis.push('dy_' + p1.id);
            tmpAxis.push('dx_' + p2.id);
            tmpAxis.push('dy_' + p2.id);
            
            const tmpToLocal = new Array(tmpAxis.length);
            for (let i = 0; i < tmpAxis.length; i++) {
                tmpToLocal[i] = axisLocal.indexOf(tmpAxis[i]);
            }

            const x0 = p0.x;
            const y0 = p0.y;
            const x1 = p1.x;
            const y1 = p1.y;
            const x2 = p2.x;
            const y2 = p2.y;

            const dx0 = unknowns[localToGlobal[axisLocal.indexOf('dx_' + p0.id)]];
            const dy0 = unknowns[localToGlobal[axisLocal.indexOf('dy_' + p0.id)]];
            const dx1 = unknowns[localToGlobal[axisLocal.indexOf('dx_' + p1.id)]];
            const dy1 = unknowns[localToGlobal[axisLocal.indexOf('dy_' + p1.id)]];
            const dx2 = unknowns[localToGlobal[axisLocal.indexOf('dx_' + p2.id)]];
            const dy2 = unknowns[localToGlobal[axisLocal.indexOf('dy_' + p2.id)]];

            const v11 = (y1 + dy1 >= y0 + dy0) ? 0 : (2 * Math.PI);
            const v12 = (y1 + dy1 >= y0 + dy0) ? 1 : -1;
            const v21 = (y2 + dy2 >= y0 + dy0) ? 0 : (2 * Math.PI);
            const v22 = (y2 + dy2 >= y0 + dy0) ? 1 : -1;
            // "fi_i + dfi_i"
            const fi1_dfi1 = v11 + v12 * Math.acos((x1 + dx1 - x0 - dx0)/Math.sqrt(Math.pow((x1 + dx1 - x0 - dx0), 2) + Math.pow((y1 + dy1 - y0 - dy0), 2)));
            const fi2_dfi2 = v21 + v22 * Math.acos((x2 + dx2 - x0 - dx0)/Math.sqrt(Math.pow((x2 + dx2 - x0 - dx0), 2) + Math.pow((y2 + dy2 - y0 - dy0), 2)));
            const v3 = (fi2_dfi2 >= fi1_dfi1) ? 0 : (2 * Math.PI); 

            JacobianLocal[tmpToLocal[0]][tmpToLocal[0]] = 0; // 0
            JacobianLocal[tmpToLocal[0]][tmpToLocal[1]] = ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) - ((v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2))))/Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2) - (v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2))))/Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2);
            JacobianLocal[tmpToLocal[0]][tmpToLocal[2]] = ((v12*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (v22*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) + ((2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2));
            JacobianLocal[tmpToLocal[0]][tmpToLocal[3]] = (v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))/Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2));
            JacobianLocal[tmpToLocal[0]][tmpToLocal[4]] = - ((2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) - (v12*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)));
            JacobianLocal[tmpToLocal[0]][tmpToLocal[5]] = -(v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))/Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2);
            JacobianLocal[tmpToLocal[0]][tmpToLocal[6]] = (v22*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2));

            JacobianLocal[tmpToLocal[1]][tmpToLocal[0]] = ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) - ((v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2))))/Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2) - (v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2))))/Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2);
            JacobianLocal[tmpToLocal[1]][tmpToLocal[1]] = lambda*((v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2))))/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) + Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*((v12*((2*dx0 - 2*dx1 + 2*x0 - 2*x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2) + (dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2) - (3*Math.pow((2*dx0 - 2*dx1 + 2*x0 - 2*x1),2)*(dx0 - dx1 + x0 - x1))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),5/2))))/Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2) - (v22*((2*dx0 - 2*dx2 + 2*x0 - 2*x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2) + (dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2) - (3*Math.pow((2*dx0 - 2*dx2 + 2*x0 - 2*x2),2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),5/2))))/Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2) - (v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)))*((2*dx0 - 2*dx1 + 2*x0 - 2*x1)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*Math.pow((dx0 - dx1 + x0 - x1),2))/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),2)))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),3/2)) + (v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*((2*dx0 - 2*dx2 + 2*x0 - 2*x2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*Math.pow((dx0 - dx2 + x0 - x2),2))/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),2)))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),3/2))) - (((v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2))))/Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2) - (v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2))))/Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2))*(2*dx0 - 2*dx1 + 2*x0 - 2*x1))/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - (Math.pow((2*dx0 - 2*dx1 + 2*x0 - 2*x1),2)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)));
            JacobianLocal[tmpToLocal[1]][tmpToLocal[2]] = lambda*(Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*((v12*((2*dy0 - 2*dy1 + 2*y0 - 2*y1)/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (3*(2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),5/2))))/Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2) - (v22*((2*dy0 - 2*dy2 + 2*y0 - 2*y2)/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)) - (3*(2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),5/2))))/Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2) + (v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*Math.pow((dx0 - dx1 + x0 - x1),2))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),3/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),2)) - (v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*Math.pow((dx0 - dx2 + x0 - x2),2))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),3/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),2))) - (((v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2))))/Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2) - (v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2))))/Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) + (((v12*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (v22*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*(2*dx0 - 2*dx1 + 2*x0 - 2*x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)));
            JacobianLocal[tmpToLocal[1]][tmpToLocal[3]] = lambda*((((v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2))))/Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2) - (v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2))))/Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2))*(2*dx0 - 2*dx1 + 2*x0 - 2*x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) - ((v12*((2*dx0 - 2*dx1 + 2*x0 - 2*x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2) + (dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2) - (3*Math.pow((2*dx0 - 2*dx1 + 2*x0 - 2*x1),2)*(dx0 - dx1 + x0 - x1))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),5/2))))/Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2) - (v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)))*((2*dx0 - 2*dx1 + 2*x0 - 2*x1)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*Math.pow((dx0 - dx1 + x0 - x1),2))/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),2)))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),3/2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - (v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2))))/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) + (Math.pow((2*dx0 - 2*dx1 + 2*x0 - 2*x1),2)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) + (v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)))*(2*dx0 - 2*dx1 + 2*x0 - 2*x1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)));
            JacobianLocal[tmpToLocal[1]][tmpToLocal[4]] = -lambda*(((v12*((2*dy0 - 2*dy1 + 2*y0 - 2*y1)/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (3*(2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),5/2))))/Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2) + (v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*Math.pow((dx0 - dx1 + x0 - x1),2))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),3/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - (((v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2))))/Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2) - (v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2))))/Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) + (v12*(2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(4*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),2)));
            JacobianLocal[tmpToLocal[1]][tmpToLocal[5]] = lambda*(((v22*((2*dx0 - 2*dx2 + 2*x0 - 2*x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2) + (dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2) - (3*Math.pow((2*dx0 - 2*dx2 + 2*x0 - 2*x2),2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),5/2))))/Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2) - (v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*((2*dx0 - 2*dx2 + 2*x0 - 2*x2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*Math.pow((dx0 - dx2 + x0 - x2),2))/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),2)))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),3/2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - (v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*(2*dx0 - 2*dx1 + 2*x0 - 2*x1))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)));
            JacobianLocal[tmpToLocal[1]][tmpToLocal[6]] = lambda*(((v22*((2*dy0 - 2*dy2 + 2*y0 - 2*y2)/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)) - (3*(2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),5/2))))/Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2) + (v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*Math.pow((dx0 - dx2 + x0 - x2),2))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),3/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) + (v22*(2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)));

            JacobianLocal[tmpToLocal[2]][tmpToLocal[0]] = ((v12*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (v22*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) + ((2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2));
            JacobianLocal[tmpToLocal[2]][tmpToLocal[1]] = lambda*(Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*((v12*(2*dy0 - 2*dy1 + 2*y0 - 2*y1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (v22*(2*dy0 - 2*dy2 + 2*y0 - 2*y2))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)) - (3*v12*(2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(4*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),5/2)) + (3*v22*(2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),5/2)) + (v12*((2*dx0 - 2*dx1 + 2*x0 - 2*x1)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*Math.pow((dx0 - dx1 + x0 - x1),2))/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),2))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(4*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),3/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (v22*((2*dx0 - 2*dx2 + 2*x0 - 2*x2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*Math.pow((dx0 - dx2 + x0 - x2),2))/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),2))*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),3/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2))) - (((v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2))))/Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2) - (v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2))))/Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) + (((v12*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (v22*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*(2*dx0 - 2*dx1 + 2*x0 - 2*x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)));
            JacobianLocal[tmpToLocal[2]][tmpToLocal[2]] = lambda*((v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2))))/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) + Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*((v12*(dx0 - dx1 + x0 - x1))/(Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (v22*(dx0 - dx2 + x0 - x2))/(Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)) - (3*v12*Math.pow((2*dy0 - 2*dy1 + 2*y0 - 2*y1),2)*(dx0 - dx1 + x0 - x1))/(4*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),5/2)) + (3*v22*Math.pow((2*dy0 - 2*dy2 + 2*y0 - 2*y2),2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),5/2)) - (v12*Math.pow((2*dy0 - 2*dy1 + 2*y0 - 2*y1),2)*Math.pow((dx0 - dx1 + x0 - x1),3))/(4*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),3/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),7/2)) + (v22*Math.pow((2*dy0 - 2*dy2 + 2*y0 - 2*y2),2)*Math.pow((dx0 - dx2 + x0 - x2),3))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),3/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),7/2))) + (((v12*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (v22*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1))/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - (Math.pow((2*dy0 - 2*dy1 + 2*y0 - 2*y1),2)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)));
            JacobianLocal[tmpToLocal[2]][tmpToLocal[3]] = -lambda*(Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*((v12*(2*dy0 - 2*dy1 + 2*y0 - 2*y1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (3*v12*(2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(4*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),5/2)) + (v12*((2*dx0 - 2*dx1 + 2*x0 - 2*x1)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*Math.pow((dx0 - dx1 + x0 - x1),2))/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),2))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(4*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),3/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2))) + (((v12*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (v22*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*(2*dx0 - 2*dx1 + 2*x0 - 2*x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)));
            JacobianLocal[tmpToLocal[2]][tmpToLocal[4]] = -lambda*((v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2))))/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*((3*v12*Math.pow((2*dy0 - 2*dy1 + 2*y0 - 2*y1),2)*(dx0 - dx1 + x0 - x1))/(4*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),5/2)) - (v12*(dx0 - dx1 + x0 - x1))/(Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) + (v12*Math.pow((2*dy0 - 2*dy1 + 2*y0 - 2*y1),2)*Math.pow((dx0 - dx1 + x0 - x1),3))/(4*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),3/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),7/2))) + (((v12*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (v22*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) - (Math.pow((2*dy0 - 2*dy1 + 2*y0 - 2*y1),2)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) + (v12*Math.pow((2*dy0 - 2*dy1 + 2*y0 - 2*y1),2)*(dx0 - dx1 + x0 - x1))/(4*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),2)));
            JacobianLocal[tmpToLocal[2]][tmpToLocal[5]] = lambda*(Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*((v22*(2*dy0 - 2*dy2 + 2*y0 - 2*y2))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)) - (3*v22*(2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),5/2)) + (v22*((2*dx0 - 2*dx2 + 2*x0 - 2*x2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*Math.pow((dx0 - dx2 + x0 - x2),2))/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),2))*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),3/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2))) - (v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)));
            JacobianLocal[tmpToLocal[2]][tmpToLocal[6]] = -lambda*(Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*((3*v22*Math.pow((2*dy0 - 2*dy2 + 2*y0 - 2*y2),2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),5/2)) - (v22*(dx0 - dx2 + x0 - x2))/(Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)) + (v22*Math.pow((2*dy0 - 2*dy2 + 2*y0 - 2*y2),2)*Math.pow((dx0 - dx2 + x0 - x2),3))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),3/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),7/2))) - (v22*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)));

            JacobianLocal[tmpToLocal[3]][tmpToLocal[0]] = (v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))/Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2));
            JacobianLocal[tmpToLocal[3]][tmpToLocal[1]] = lambda*((((v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2))))/Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2) - (v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2))))/Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2))*(2*dx0 - 2*dx1 + 2*x0 - 2*x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) - (v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2))))/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) + (Math.pow((2*dx0 - 2*dx1 + 2*x0 - 2*x1),2)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (v12*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*((2*dx0 - 2*dx1 + 2*x0 - 2*x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2) + (dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2) - (3*Math.pow((2*dx0 - 2*dx1 + 2*x0 - 2*x1),2)*(dx0 - dx1 + x0 - x1))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),5/2))))/Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2) + (v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)))*(2*dx0 - 2*dx1 + 2*x0 - 2*x1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) + (v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*((2*dx0 - 2*dx1 + 2*x0 - 2*x1)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*Math.pow((dx0 - dx1 + x0 - x1),2))/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),2)))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),3/2)));
            JacobianLocal[tmpToLocal[3]][tmpToLocal[2]] = -lambda*((((v12*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (v22*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*(2*dx0 - 2*dx1 + 2*x0 - 2*x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) + (v12*((2*dy0 - 2*dy1 + 2*y0 - 2*y1)/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (3*(2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),5/2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))/Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2) - (v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) + (v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*Math.pow((dx0 - dx1 + x0 - x1),2))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),3/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)));
            JacobianLocal[tmpToLocal[3]][tmpToLocal[3]] = -lambda*((Math.pow((2*dx0 - 2*dx1 + 2*x0 - 2*x1),2)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2))))/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - (v12*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*((2*dx0 - 2*dx1 + 2*x0 - 2*x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2) + (dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2) - (3*Math.pow((2*dx0 - 2*dx1 + 2*x0 - 2*x1),2)*(dx0 - dx1 + x0 - x1))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),5/2))))/Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2) + (v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)))*(2*dx0 - 2*dx1 + 2*x0 - 2*x1))/(Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) + (v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*((2*dx0 - 2*dx1 + 2*x0 - 2*x1)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*Math.pow((dx0 - dx1 + x0 - x1),2))/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),2)))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),3/2)));
            JacobianLocal[tmpToLocal[3]][tmpToLocal[4]] = lambda*((v12*((2*dy0 - 2*dy1 + 2*y0 - 2*y1)/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (3*(2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),5/2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))/Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) + (v12*(2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(4*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),2)) + (v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*Math.pow((dx0 - dx1 + x0 - x1),2))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),3/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)));
            JacobianLocal[tmpToLocal[3]][tmpToLocal[5]] = (lambda*v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*(2*dx0 - 2*dx1 + 2*x0 - 2*x1))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2));
            JacobianLocal[tmpToLocal[3]][tmpToLocal[6]] = -(lambda*v22*(2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2));

            JacobianLocal[tmpToLocal[4]][tmpToLocal[0]] = - ((2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) - (v12*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)));
            JacobianLocal[tmpToLocal[4]][tmpToLocal[1]] = lambda*((((v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2))))/Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2) - (v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2))))/Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) - (v12*(2*dy0 - 2*dy1 + 2*y0 - 2*y1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))) + ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) + (v12*(2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),2)) - (v12*((2*dx0 - 2*dx1 + 2*x0 - 2*x1)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*Math.pow((dx0 - dx1 + x0 - x1),2))/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),2))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(4*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),3/2)*(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))));
            JacobianLocal[tmpToLocal[4]][tmpToLocal[2]] = -lambda*((v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2))))/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) + (((v12*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (v22*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) - (Math.pow((2*dy0 - 2*dy1 + 2*y0 - 2*y1),2)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) + (v12*(dx0 - dx1 + x0 - x1))/(Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))) - (v12*Math.pow((2*dy0 - 2*dy1 + 2*y0 - 2*y1),2)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),2)) - (v12*Math.pow((2*dy0 - 2*dy1 + 2*y0 - 2*y1),2)*Math.pow((dx0 - dx1 + x0 - x1),3))/(4*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),3/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3)));
            JacobianLocal[tmpToLocal[4]][tmpToLocal[3]] = -lambda*(((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (v12*(2*dy0 - 2*dy1 + 2*y0 - 2*y1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))) + (v12*(1/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) + (v12*(2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(2*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),2)) - (v12*((2*dx0 - 2*dx1 + 2*x0 - 2*x1)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)) - ((2*dx0 - 2*dx1 + 2*x0 - 2*x1)*Math.pow((dx0 - dx1 + x0 - x1),2))/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),2))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(dx0 - dx1 + x0 - x1))/(4*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),3/2)*(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))));
            JacobianLocal[tmpToLocal[4]][tmpToLocal[4]] = -lambda*((Math.pow((2*dy0 - 2*dy1 + 2*y0 - 2*y1),2)*(v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2)))))/(4*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3/2)) - (v3 - v11 + v21 - v12*(Math.PI - Math.acos((dx0 - dx1 + x0 - x1)/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))) + v22*(Math.PI - Math.acos((dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2))))/Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2) - (v12*(dx0 - dx1 + x0 - x1))/(Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))) + (v12*Math.pow((2*dy0 - 2*dy1 + 2*y0 - 2*y1),2)*(dx0 - dx1 + x0 - x1))/(4*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),2)) + (v12*Math.pow((2*dy0 - 2*dy1 + 2*y0 - 2*y1),2)*Math.pow((dx0 - dx1 + x0 - x1),3))/(4*Math.pow((1 - Math.pow((dx0 - dx1 + x0 - x1),2)/(Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2))),3/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),3)));
            JacobianLocal[tmpToLocal[4]][tmpToLocal[5]] = (lambda*v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2));
            JacobianLocal[tmpToLocal[4]][tmpToLocal[6]] = -(lambda*v22*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2));

            JacobianLocal[tmpToLocal[5]][tmpToLocal[0]] = -(v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))/Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2);
            JacobianLocal[tmpToLocal[5]][tmpToLocal[1]] = (lambda*v22*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*((2*dx0 - 2*dx2 + 2*x0 - 2*x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2) + (dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2) - (3*Math.pow((2*dx0 - 2*dx2 + 2*x0 - 2*x2),2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),5/2))))/Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2) - (lambda*v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*(2*dx0 - 2*dx1 + 2*x0 - 2*x1))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) - (lambda*v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*((2*dx0 - 2*dx2 + 2*x0 - 2*x2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*Math.pow((dx0 - dx2 + x0 - x2),2))/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),2)))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),3/2));
            JacobianLocal[tmpToLocal[5]][tmpToLocal[2]] = (lambda*v22*((2*dy0 - 2*dy2 + 2*y0 - 2*y2)/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)) - (3*(2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),5/2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))/Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2) - (lambda*v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)) + (lambda*v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*Math.pow((dx0 - dx2 + x0 - x2),2))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),3/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),2));
            JacobianLocal[tmpToLocal[5]][tmpToLocal[3]] = (lambda*v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*(2*dx0 - 2*dx1 + 2*x0 - 2*x1))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2));
            JacobianLocal[tmpToLocal[5]][tmpToLocal[4]] = (lambda*v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*(2*dy0 - 2*dy1 + 2*y0 - 2*y1))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2));
            JacobianLocal[tmpToLocal[5]][tmpToLocal[5]] = (lambda*v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*((2*dx0 - 2*dx2 + 2*x0 - 2*x2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*Math.pow((dx0 - dx2 + x0 - x2),2))/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),2)))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),3/2)) - (lambda*v22*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*((2*dx0 - 2*dx2 + 2*x0 - 2*x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2) + (dx0 - dx2 + x0 - x2)/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2) - (3*Math.pow((2*dx0 - 2*dx2 + 2*x0 - 2*x2),2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),5/2))))/Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2);
            JacobianLocal[tmpToLocal[5]][tmpToLocal[6]] = - (lambda*v22*((2*dy0 - 2*dy2 + 2*y0 - 2*y2)/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)) - (3*(2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),5/2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2))/Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2) - (lambda*v22*(1/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),1/2) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)))*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*Math.pow((dx0 - dx2 + x0 - x2),2))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),3/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),2));

            JacobianLocal[tmpToLocal[6]][tmpToLocal[0]] = (v22*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2));
            JacobianLocal[tmpToLocal[6]][tmpToLocal[1]] = (lambda*v22*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)) + (lambda*v22*(2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)) - (3*lambda*v22*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*(2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),5/2)) + (lambda*v22*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*((2*dx0 - 2*dx2 + 2*x0 - 2*x2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*Math.pow((dx0 - dx2 + x0 - x2),2))/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),2))*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),3/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2));
            JacobianLocal[tmpToLocal[6]][tmpToLocal[2]] = (lambda*v22*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*(dx0 - dx2 + x0 - x2))/(Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)) - (lambda*v22*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*Math.pow((2*dy0 - 2*dy2 + 2*y0 - 2*y2),2)*Math.pow((dx0 - dx2 + x0 - x2),3))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),3/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),7/2)) - (3*lambda*v22*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*Math.pow((2*dy0 - 2*dy2 + 2*y0 - 2*y2),2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),5/2)) + (lambda*v22*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2));
            JacobianLocal[tmpToLocal[6]][tmpToLocal[3]] = -(lambda*v22*(2*dx0 - 2*dx1 + 2*x0 - 2*x1)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2));
            JacobianLocal[tmpToLocal[6]][tmpToLocal[4]] = -(lambda*v22*(2*dy0 - 2*dy1 + 2*y0 - 2*y1)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2));
            JacobianLocal[tmpToLocal[6]][tmpToLocal[5]] = (3*lambda*v22*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*(2*dx0 - 2*dx2 + 2*x0 - 2*x2)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),5/2)) - (lambda*v22*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*(2*dy0 - 2*dy2 + 2*y0 - 2*y2))/(2*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)) - (lambda*v22*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*((2*dx0 - 2*dx2 + 2*x0 - 2*x2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)) - ((2*dx0 - 2*dx2 + 2*x0 - 2*x2)*Math.pow((dx0 - dx2 + x0 - x2),2))/Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),2))*(2*dy0 - 2*dy2 + 2*y0 - 2*y2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),3/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2));
            JacobianLocal[tmpToLocal[6]][tmpToLocal[6]] = (lambda*v22*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*Math.pow((2*dy0 - 2*dy2 + 2*y0 - 2*y2),2)*Math.pow((dx0 - dx2 + x0 - x2),3))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),3/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),7/2)) - (lambda*v22*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*(dx0 - dx2 + x0 - x2))/(Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),3/2)) + (3*lambda*v22*Math.pow((Math.pow((dx0 - dx1 + x0 - x1),2) + Math.pow((dy0 - dy1 + y0 - y1),2)),1/2)*Math.pow((2*dy0 - 2*dy2 + 2*y0 - 2*y2),2)*(dx0 - dx2 + x0 - x2))/(4*Math.pow((1 - Math.pow((dx0 - dx2 + x0 - x2),2)/(Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2))),1/2)*Math.pow((Math.pow((dx0 - dx2 + x0 - x2),2) + Math.pow((dy0 - dy2 + y0 - y2),2)),5/2));

        }
    }

    return({axisLocal, JacobianLocal, F_Local, dim, localToGlobal});
}

export { getDerivativeFunction_LengthTotal };
